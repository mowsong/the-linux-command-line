#!/bin/bash

INT=-10a

if [[ "$INT" =~ ^[-+]?[0-9]+$ ]]; then
    if [ $INT -eq 0 ]; then
        echo "INT is zero."
    else
        if [ $INT -lt 0 ]; then
            echo "INT is negative."
        else
            echo "INT is positive."
        fi
        if [ $((INT%2)) -eq 0 ]; then
            echo "INT is even."
        else
            echo "INT is odd."
        fi
    fi
else
    echo "INT is not an integer." >&2
    #exit 1
fi

# The ^ indicates the beginning of the input pattern
# The - is a literal "-"
# The ? means "0 or 1 of the preceding (-)"
# The + means "1 or more of the preceding ([0-9])"
# The $ indicates the end of the input pattern


# https://stackoverflow.com/questions/2210349/test-whether-string-is-a-valid-integer

is_int() {
    if [ "$1" -eq "$1" ] 2> /dev/null; then
        return 0
    else 
        return 1
    fi
}

if is_int "$INT" ; then
    echo "INT is an integer."
else
    echo "INT is not an integer."
fi
